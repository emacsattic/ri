#!/usr/bin/env ruby

# ri_repl --- helper script for use with ri.el

require 'rubygems'
gem 'rdoc', '>= 2.2.1'

require 'rdoc/ri'
require 'rdoc/ri/driver'
require 'stringio'

class RDoc::RI::Driver
  # We don't want to exit on not found
  def abort(msg); warn msg end
end

module RDoc
  module RI
    SEPARATOR = '%' * 40 # Something unique to watch for

    def self.repl(input = $stdin)
      print 'RI> '
      loop do
        $stdout = StringIO.new

        Driver.run [input.gets.chomp]
        $stdout.rewind

        STDOUT.puts parse($stdout.read)
        STDOUT.puts SEPARATOR
      end
    end

    def self.parse(output)
      if output =~ /^     More than one method matched your request/
        disambiguate output
      else
        output
      end
    end

    # Return a Lisp list of all the choices
    def self.disambiguate(output)
      lines = output.split("\n")[3 .. -1]
      ['(', lines.map{ |l| "\"#{l.gsub(/ .*/, '')}\"" }, ')']
    end
  end
end

RDoc::RI.repl if __FILE__ == $0
